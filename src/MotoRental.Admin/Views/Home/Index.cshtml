@using System
@using Microsoft.AspNetCore.Http
@* @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor *@

@{
    const string ONLINE = "online";
    const string OFFLINE = "offline";
    int devicesMove = 1;//Model.Devices.Where(x => x.Status == ONLINE && Model.Positions
    //.Where(y => y.DeviceId == x.Id).FirstOrDefault().Attributes.Motion).Count();
    int devicesOn = 1;//Model.Devices.Where(x => x.Status == ONLINE).Count() - devicesMove;
    int devicesOff = 1;//Model.Devices.Where(x => x.Status == OFFLINE).Count();
    int devicesTotal =1;// Model.Devices.Count();
    //var list = Model.Devices.Where(x => x.Status == ONLINE).ToArray();
    bool isDeviceReadonly = true;//Convert.ToBoolean(HttpContextAccessor.HttpContext.Session.GetString("deviceReadonly"));
}

<!-- Leaflet lib (open street map)-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.8.0/leaflet.min.css" integrity="sha512-oIQ0EBio8LJupRpgmDsIsvm0Fsr6c3XNHLB7at5xb+Cf6eQuCX9xuX8XXGRIcokNgdqL1ms7nqbQ6ryXMGxXpg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.8.0/leaflet.min.js" integrity="sha512-TL+GX2RsOUlTndpkgHVnSQ9r6zldqHzfyECrdabkpucdFroZ3/HAhMmP2WYaPjsJCoot+0McmdPOLjmmicG9qg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script><!-- /Leaflet lib (open street map) -->

<section class="content-header">
    <h1>
        Dashboard
        <small>Painel de Controle</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li class="active">Dashboard</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
                <div class="inner">
                    <h3>@devicesOn<sup style="font-size: 20px"></sup></h3>
                    <p>Dispositivos Ligados</p>
                </div>
                <div class="icon">
                    <i class="fas fa-power-off"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-red">
                <div class="inner">
                    <h3>@devicesOff<sup style="font-size: 20px"></sup></h3>
                    <p>Dispositivos Desligados</p>
                </div>
                <div class="icon">
                    <i class="fas fa-ban"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
                <div class="inner">
                    <h3>@devicesMove</h3>
                    <p>Em Movimento</p>
                </div>
                <div class="icon">
                    <i class="fas fa-route"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->
        <div class="col-lg-3 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-yellow">
                <div class="inner">
                    <h3>@devicesTotal</h3>
                    <p>Total de Dispositivos</p>
                </div>
                <div class="icon">
                    <i class="fas fa-car"></i>
                </div>
            </div>
        </div>
        <!-- ./col -->
    </div>
    <!-- /.row -->
    <!-- Main row -->
    <div class="row">
        <!-- Left col -->
        <section class="col-lg-5 connectedSortable">
            <!-- Custom tabs (Charts with tabs)-->
            <!-- DONUT CHART -->
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">Dispositivos</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i
                                class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i
                                class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body chart-responsive">
                    <div class="chart" id="sales-chart" style="height: 300px; position: relative;"></div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.nav-tabs-custom -->
        </section>
        <!-- /.Left col -->
        <!-- right col (We are only adding the ID to make the widgets sortable)-->
        <section class="col-lg-7 connectedSortable">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">Mapa</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body chart-responsive">
                    <div id="map" style="height: 300px; position: relative;"></div>
                    <div class="small-box-footer" style="padding-left: 10px;">
                        <a href="Maps" class="small-box-footer">Mais Informações <i class="fas fa-arrow-circle-right" aria-hidden="true"></i></a>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
        </section>
        <!-- right col -->

    </div>
    <!-- /.row (main row) -->

    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Gerenciar Dispositivos</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body overflow-x">
                    <table id="data-table" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Cliente</th>
                                <th>Placa</th>
                                <th>Status</th>
                                <th>Última Comunicação</th>
                                <th>Endereço</th>
                                <th></th>
                            </tr>
                        </thead>
                        @* <tbody>
                            @foreach (var item in Model.Devices)
                            {
                                bool isMotion = Model.Positions.Where(p => p.DeviceId == item.Id && item.Status == "online")?.FirstOrDefault()?.Attributes?.Motion ?? false;
                                var position = Model.Positions.Where(p => p.DeviceId == item.Id)?.FirstOrDefault();
                                var group = Model.Groups.Where(g => g.Id == item.GroupId)?.FirstOrDefault()?.Name;
                                decimal? lat = position?.Latitude;
                                decimal? lng = position?.Longitude;

                                <tr>
                                    <td>@Html.DisplayFor(modelItem => group)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                    <td>
                                        <i class="@Category.GetIcons()[item.Category ?? "null"] 
                                        @(item.Status == "online" ? "on" : "off")" title="@item.Status">
                                        </i>
                                        @Html.DisplayFor(modelItem => item.Category)
                                        <span class="@((position?.Attributes?.Ignition ?? false) ? "label label-success" : "label label-danger") pull-right" style="margin-left : 5px">
                                            <i class="fas fa-key"></i>&nbsp;
                                            @((position?.Attributes?.Ignition ?? false) ? "ignição ligada" : "ignição desligada")
                                        </span>
                                        <span class="@(isMotion ? "label label-primary" : "label label-default") pull-right">
                                          <i class="@(isMotion ? "fas fa-route" : "fas fa-ban")"></i> &nbsp; @(isMotion ? "Movimento" : "Parado") 
                                        </span>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.LastUpdateStr)</td>
                                    <td>@Html.DisplayFor(modelItem => position.Address)</td>
                                    <td>
                                        @{
                                            if(!isDeviceReadonly)
                                            {
                                                <a href="Devices/Update/@item.Id" class="btn btn-block btn-primary">Editar</a>
                                            }
                                        }
                                       

                                        <a href="https://www.google.com/maps/place/@lat,@lng/@@@lat,@lng,17z" target="_blank" class="btn btn-block btn-danger">
                                        <i class="fa fa-google"></i> Ver no Mapa</a>
                                    </td>
                                </tr>
                            }
                    </table> *@
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>

</section>

<!-- Morris.js charts -->
<script src="components/raphael/raphael.min.js"></script>
<script src="components/morris.js/morris.min.js"></script>
<!-- DataTables -->
<script src="/components/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="/components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
<script src="/dist/js/dataTablesConfig.js"></script>


<style>
    #map {
        height: 180px;
        position: relative;
    }
</style>
<script>
    const MULTIPLIER = 60000;
    let min = 10;
    ms = MULTIPLIER * min;

    setTimeout(function () {
        window.location.reload(1);
    }, ms);

    $(function () {
        "use strict";
        //DONUT CHART
        var donut = new Morris.Donut({
            element: 'sales-chart',
            resize: true,
            colors: ["#3c8dbc", "#f56954", "#00a65a", "#f39c12"],
            data: [
                { label: "Em Movimento", value: @devicesMove },
                { label: "Desligados", value: @devicesOff },
                { label: "Ligados", value: @devicesOn },
                { label: "Total", value: @devicesTotal }
            ],
            hideHover: 'auto'
        });
    });

    //maps
    var map = L.map('map').setView([-19.4181671, -51.476252], 5);

    var tiles = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
      maxZoom: 25,
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
        'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
      id: 'mapbox/streets-v11',
      tileSize: 512,
      zoomOffset: -1
    }).addTo(map);

    @* @foreach(var item in Model.Positions)
	{
        string nameIcon = @Model.Devices.Where(d => d.Id == item.DeviceId).FirstOrDefault().Category;
        string icon = @Category.GetIcons()[nameIcon ?? "null"].ToString();
        string onOf = @Model.Devices.Where(d => d.Id == item.DeviceId).FirstOrDefault().Status == "online" ? "on" : "off";
        string clazz = icon + " " + onOf; 
        string deviceName = @Model.Devices.Where(d => d.Id == item.DeviceId).FirstOrDefault().Name;
        string positionAddress = @item.Address;
        string urlMap = "https://www.google.com/maps/place/" + @item.Latitude + "," + @item.Longitude + "/@" + @item.Latitude + "," + @item.Longitude + ",17z";

	   <text>
            var lat = @item.Latitude.ToString().Replace(",", ".");
            var long = @item.Longitude.ToString().Replace(",", ".");

            var icon = '@icon';

            var myIcon = L.divIcon({
                className: '@clazz',
                iconSize: [38, 95],
                iconAnchor: [22, 94],
                popupAnchor: [-3, -76],
                shadowSize: [68, 95],
                shadowAnchor: [22, 94]
            });

            var marker = L.marker([lat, long], { icon: myIcon }).addTo(map);
            
            marker.bindPopup("<b>Dispositivo:</b> @deviceName <br> <b>Ultimo endereço:</b> @positionAddress <br><b>Visualizar:</b> <a href= @urlMap target='_blank'>Ver no Google maps</a>").openPopup();
           
		</text>
	} *@

    var popup = L.popup();

    function onMapClick(e) {
      popup
        .setLatLng(e.latlng)
        .setContent("Latitude e longitude " + e.latlng.toString())
        .openOn(map);
    }

    map.on('click', onMapClick);
</script>